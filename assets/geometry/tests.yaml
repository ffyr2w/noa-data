input2D: &input2D tmp_image2D.mrc  # shape: [1,1,256,256]
input3D: &input3D tmp_image3D.mrc  # shape: [1,64,64,64]

transform_2d: # scale, rotate, then shift
  input: *input2D

  tests:
    0:
      shape: [ 1, 1, 256, 256 ]
      cvalue: 1.3
      center: [ 128, 128 ]
      scale: [ 1,1 ]
      rotate: 45  # deg
      shift: [ 0,0 ]
      expected: tmp_transform2D_test00.mrc
      interp: INTERP_NEAREST
      border: BORDER_ZERO
    1:
      shape: [ 1, 1, 256, 256 ]
      cvalue: 1.3
      center: [ 128, 128 ]
      scale: [ 1, 1 ]
      rotate: 0  # deg
      shift: [ -20.6, 10 ]
      expected: tmp_transform2D_test01.mrc
      interp: INTERP_NEAREST
      border: BORDER_VALUE
    2:
      shape: [ 1, 1, 256, 256 ]
      cvalue: 2
      center: [ 128, 128 ]
      scale: [ 0.7, 0.6 ]
      rotate: 0  # deg
      shift: [ 0,0 ]
      expected: tmp_transform2D_test02.mrc
      interp: INTERP_NEAREST
      border: BORDER_CLAMP
    3:
      shape: [ 1, 1, 256, 256 ]
      cvalue: 1.3
      center: [ 128, 128 ]
      scale: [ 0.7, 0.7 ]
      rotate: 35.5  # deg
      shift: [ -25.5, 5.5 ]
      expected: tmp_transform2D_test03.mrc
      interp: INTERP_NEAREST
      border: BORDER_REFLECT
    4:
      shape: [ 1, 1, 256, 256 ]
      cvalue: 1.3
      center: [ 128, 128 ]
      scale: [ 0.7, 0.7 ]
      rotate: 35.5  # deg
      shift: [ -25.5, 5.5 ]
      expected: tmp_transform2D_test04.mrc
      interp: INTERP_LINEAR
      border: BORDER_ZERO
    5:
      shape: [ 1, 1, 256, 256 ]
      cvalue: -1.3
      center: [ 128, 128 ]
      scale: [ 1, 0.85 ]
      rotate: 85.5  # deg
      shift: [ -15.5, -5 ]
      expected: tmp_transform2D_test05.mrc
      interp: INTERP_LINEAR
      border: BORDER_VALUE
    6:
      shape: [ 1, 1, 256, 256 ]
      cvalue: 1.3
      center: [ 128, 128 ]
      scale: [ 0.7, 0.7 ]
      rotate: 35.5  # deg
      shift: [ -25.5, 5.5 ]
      expected: tmp_transform2D_test06.mrc
      interp: INTERP_LINEAR
      border: BORDER_CLAMP
    7:
      shape: [ 1, 1, 256, 256 ]
      cvalue: 1.3
      center: [ 128, 128 ]
      scale: [ 0.9, 1.1 ]
      rotate: -35.5  # deg
      shift: [ -4,4 ]
      expected: tmp_transform2D_test07.mrc
      interp: INTERP_LINEAR
      border: BORDER_REFLECT

transform_2d_cubic: # scale then rotate
  input: transform2D_cubic_input.mrc
  shape: [ 1, 1, 480, 481 ]
  center: [ 239, 240 ] # (n-1)/2
  scale: [ 0.9, 1.2 ]
  rotate: -45  # deg
  cvalue: 1.3
  tests:
    0:
      expected: transform2D_cubic_test00.mrc
      interp: INTERP_CUBIC
      border: BORDER_ZERO
    1:
      expected: transform2D_cubic_test01.mrc
      interp: INTERP_CUBIC_BSPLINE
      border: BORDER_ZERO
    2:
      expected: transform2D_cubic_test02.mrc
      interp: INTERP_CUBIC
      border: BORDER_CLAMP
    3:
      expected: transform2D_cubic_test03.mrc
      interp: INTERP_CUBIC_BSPLINE
      border: BORDER_CLAMP
    4:
      expected: transform2D_cubic_test04.mrc
      interp: INTERP_CUBIC
      border: BORDER_MIRROR
    5:
      expected: transform2D_cubic_test05.mrc
      interp: INTERP_CUBIC_BSPLINE
      border: BORDER_MIRROR

# -- 3D -- #

transform_3d: # scale, rotate, then shift
  input: *input3D
  tests:
    0:
      cvalue: 1.3
      center: [ 31.5, 31.5, 31.5 ]
      scale: [ 1,1,1 ]
      euler: [ -60, 0, 20 ]  # ZYZ intrinsic, deg
      shift: [ 0,0,0 ]
      expected: tmp_transform3D_test00.mrc
      interp: INTERP_NEAREST
      border: BORDER_ZERO
    1:
      cvalue: 1.3
      center: [ 31.5, 31.5, 31.5 ]
      scale: [  1.1, 0.6, 0.8 ]
      euler: [ 0,0,0 ]  # ZYZ intrinsic, deg
      shift: [ -5.2, 5.6, 4.7 ]
      expected: tmp_transform3D_test01.mrc
      interp: INTERP_NEAREST
      border: BORDER_VALUE
    2:
      cvalue: 1.3
      center: [ 31.5, 31.5, 31.5 ]
      scale: [ 0.7, 0.7, 0.7 ]
      euler: [ 90, -30, 45 ]  # ZYZ intrinsic, deg
      shift: [ -5.2, 5.6, 4.7 ]
      expected: tmp_transform3D_test02.mrc
      interp: INTERP_NEAREST
      border: BORDER_REFLECT
    3:
      cvalue: 2
      center: [ 31.5, 31.5, 31.5 ]
      scale: [ 0.7, 0.7, 0.7 ]
      euler: [ 90, -30, 45 ]  # ZYZ intrinsic, deg
      shift: [ -5.2, 5.6, 4.7 ]
      expected: tmp_transform3D_test03.mrc
      interp: INTERP_NEAREST
      border: BORDER_MIRROR
    4:
      cvalue: -1.1
      center: [ 31.5, 31.5, 31.5 ]
      scale: [ 0.7, 0.7, 0.7 ]
      euler: [ 90, -30, 45 ]  # ZYZ intrinsic, deg
      shift: [ -5.2, 5.6, 4.7 ]
      expected: tmp_transform3D_test04.mrc
      interp: INTERP_LINEAR
      border: BORDER_VALUE
    5:
      cvalue: 1.3
      center: [ 31.5, 31.5, 31.5 ]
      scale: [ 0.7, 0.7, 0.7 ]
      euler: [ 90, -30, 45 ]  # ZYZ intrinsic, deg
      shift: [ -5.2, 5.6, 4.7 ]
      expected: tmp_transform3D_test05.mrc
      interp: INTERP_LINEAR
      border: BORDER_CLAMP
    6:
      cvalue: 1.3
      center: [ 31.5, 31.5, 31.5 ]
      scale: [ 0.7, 0.7, 0.7 ]
      euler: [ 90, -30, 45 ]  # ZYZ intrinsic, deg
      shift: [ -5.2, 5.6, 4.7 ]
      expected: tmp_transform3D_test06.mrc
      interp: INTERP_LINEAR
      border: BORDER_PERIODIC

transform_3d_cubic: # scale then rotate
  input: transform3D_cubic_input.mrc  # shape: [1,64,65,66]
  center: [ 31, 32, 32 ]
  scale: [ 0.8, 0.8, 0.8 ]
  euler: [ 0, 30, 0 ]  # ZYZ intrinsic, deg
  cvalue: 1.3
  tests:
    0:
      expected: transform3D_cubic_test00.mrc
      interp: INTERP_CUBIC
      border: BORDER_ZERO
    1:
      expected: transform3D_cubic_test01.mrc
      interp: INTERP_CUBIC_BSPLINE
      border: BORDER_ZERO
    2:
      expected: transform3D_cubic_test02.mrc
      interp: INTERP_CUBIC
      border: BORDER_CLAMP
    3:
      expected: transform3D_cubic_test03.mrc
      interp: INTERP_CUBIC_BSPLINE
      border: BORDER_CLAMP
    4:
      expected: transform3D_cubic_test04.mrc
      interp: INTERP_CUBIC
      border: BORDER_MIRROR
    5:
      expected: transform3D_cubic_test05.mrc
      interp: INTERP_CUBIC_BSPLINE
      border: BORDER_MIRROR

transform_2d_symmetry:
  input: transform2D_symmetry_input.mrc # [512,512]
  tests:
    0:
      expected: transform2D_symmetry_test00.mrc
      shift: [ 10,10 ]
      symmetry: C2
      angle: 30 # deg
      center: [ 256,256 ]
      interp: INTERP_LINEAR
    1:
      expected: transform2D_symmetry_test01.mrc
      shift: [ 64,128 ]
      symmetry: C5
      angle: 0 # deg
      center: [ 256,256 ]
      interp: INTERP_CUBIC_BSPLINE
    2:
      expected: transform2D_symmetry_test02.mrc
      shift: [ 0,0 ]
      symmetry: C3
      angle: -45 # deg
      center: [ 320,384 ]
      interp: INTERP_CUBIC_BSPLINE
    3:
      expected: transform2D_symmetry_test03.mrc
      shift: [ 0,50 ]
      symmetry: C6
      angle: 0 # deg
      center: [ 256,256 ]
      interp: INTERP_COSINE
    4:
      expected: transform2D_symmetry_test04.mrc
      shift: [ 0,0 ]
      symmetry: D2
      angle: 30 # deg
      center: [ 256,256 ]
      interp: INTERP_LINEAR
    5:
      expected: transform2D_symmetry_test05.mrc
      shift: [ 64,128 ]
      symmetry: D3
      angle: 0 # deg
      center: [ 256,256 ]
      interp: INTERP_LINEAR

transform_3d_symmetry:
  input:
    0: &input3D_sym0 transform3D_symmetry_input00.mrc # [150,150,150]
    1: &input3D_sym1 transform3D_symmetry_input01.mrc # [150,150,150]
  tests:
    0:
      input: *input3D_sym1
      expected: transform3D_symmetry_test00.mrc
      shift: [ 0,0,0 ]
      symmetry: O
      angles: [0,0,0] # deg
      center: [ 75,75,75 ]
      interp: INTERP_LINEAR
    1:
      input: *input3D_sym0
      expected: transform3D_symmetry_test01.mrc
      shift: [ 0,0,0 ]
      symmetry: I1
      angles: [ 0,0,0 ] # deg
      center: [ 75,75,75 ]
      interp: INTERP_LINEAR
    2:
      input: *input3D_sym0
      expected: transform3D_symmetry_test02.mrc
      shift: [ 0,0,0 ]
      symmetry: I2
      angles: [ 0,0,0 ] # deg
      center: [ 75,75,75 ]
      interp: INTERP_LINEAR
    3:
      input: *input3D_sym1
      expected: transform3D_symmetry_test03.mrc
      shift: [ 50,34,34 ]
      symmetry: c3
      angles: [ 0,30,0 ] # deg
      center: [ 75,75,75 ]
      interp: INTERP_LINEAR
    4:
      input: *input3D_sym1
      expected: transform3D_symmetry_test04.mrc
      shift: [ 0,0,0 ]
      symmetry: d4
      angles: [ 90,-30,-90 ] # deg
      center: [ 75,75,75 ]
      interp: INTERP_LINEAR

sphere:
  test2D:
    0:
      invert: true
      shape: [ 1,1,128,128 ]
      center: [ 64,64 ]
      radius: 40
      taper: 0
      cvalue: 1
      expected: sphere_00.mrc
    1:
      invert: false
      shape: [ 1,1,128,128 ]
      center: [ 64,64 ]
      radius: 41
      taper: 3
      cvalue: 2
      expected: sphere_01.mrc
    2:
      invert: true
      shape: [ 1,1,256,256 ]
      center: [ 128,1 ]
      radius: 108
      taper: 19
      cvalue: -1
      expected: sphere_02.mrc
  test3D:
    0:
      invert: false
      shape: [ 1,100,100,100 ]
      center: [ 30,50,70 ]
      radius: 30
      taper: 1
      cvalue: 1
      expected: sphere_03.mrc
    1:
      invert: true
      shape: [ 1,100,100,100 ]
      center: [ 30,50,70 ]
      radius: 20
      taper: 10
      cvalue: 3
      expected: sphere_04.mrc

rectangle:
  test2D:
    0:
      invert: false
      shape: [ 1,1,512,512 ]
      center: [ 256,256 ]
      radius: [ 51,50 ]
      taper: 0
      angle: 0
      cvalue: 1
      expected: rectangle_00.mrc
    1:
      invert: true
      shape: [ 1,1,230,231 ]
      center: [ 126,104 ]
      radius: [ 51,50 ]
      taper: 3
      angle: 20
      cvalue: 2
      expected: rectangle_01.mrc
    2:
      invert: false
      shape: [ 1,1,256,128 ]
      center: [ 138,76 ]
      radius: [ 80,30 ]
      taper: 10
      angle: -35
      cvalue: -1
      expected: rectangle_02.mrc
  test3D:
    0:
      invert: false
      shape: [ 1,64,128,128 ]
      center: [ 43,64,84 ]
      radius: [ 8,20,30 ]
      taper: 10
      tilt: 20
      cvalue: 1
      expected: rectangle_03.mrc
    1:
      invert: false
      shape: [ 1,64,64,64 ]
      center: [ 32,22,32 ]
      radius: [ 15,10,10 ]
      taper: 15
      tilt: 0
      cvalue: 1
      expected: rectangle_04.mrc

cylinder:
  test:
    0:
      invert: false
      shape: [ 1,64,256,256 ]
      center: [ 32,128,128 ]
      radius: 60
      length: 20
      taper: 2
      tilt: 0
      cvalue: 1
      expected: cylinder_00.mrc
    1:
      invert: false
      shape: [ 1,128,128,128 ]
      center: [ 64,75,53 ]
      radius: 31
      length: 45
      taper: 11
      tilt: 35
      cvalue: 1
      expected: cylinder_01.mrc
    2:
      invert: false
      shape: [ 1,180,91,80 ]
      center: [ 100,45,34 ]
      radius: 10
      length: 29
      taper: 10
      tilt: 90
      cvalue: 1
      expected: cylinder_02.mrc

ellipse:
  test2D:
    0:
      invert: false
      shape: [ 1,1,128,128 ]
      center: [ 64,64 ]
      radius: [ 55,64 ]
      taper: 1
      angle: 0
      cvalue: 1
      expected: ellipse_00.mrc
    1:
      invert: true
      shape: [ 1,1,128,156 ]
      center: [ 64,64 ]
      radius: [ 30,48 ]
      taper: 1
      angle: 45
      cvalue: 1
      expected: ellipse_01.mrc
    2:
      invert: false
      shape: [ 1,1,256,256 ]
      center: [ 128,1 ]
      radius: [ 128,65 ]
      taper: 19
      angle: 0
      cvalue: 1
      expected: ellipse_02.mrc
    3:
      invert: true
      shape: [ 1,1,256,256 ]
      center: [ 129,120 ]
      radius: [ 100,32 ]
      taper: 6
      angle: -15
      cvalue: 1
      expected: ellipse_03.mrc
  test3D:
    0:
      invert: false
      shape: [ 1,100,85,105 ]
      center: [ 30,50,70 ]
      radius: [ 30,35,25 ]
      taper: 2
      tilt: 0
      cvalue: 1
      expected: ellipse_04.mrc
    1:
      invert: true
      shape: [ 1,100,98,99 ]
      center: [ 30,50,70 ]
      radius: [ 5,15,25 ]
      taper: 10
      tilt: 15
      cvalue: 1
      expected: ellipse_05.mrc

polar:
  0:
    cartesian_shape: [1, 1, 256, 256]
    polar_shape: [1, 1, 512, 128]
    cartesian_center: [128, 128]
    radius_range: [0, 128]
    angle_range: [0, 6.283185307]
    interpolation_mode: INTERP_LINEAR
    input: cartesian_input_00.mrc
    output: polar_output_00.mrc
  1:
    cartesian_shape: [1, 1, 256, 256]
    polar_shape: [1, 1, 256, 64]
    cartesian_center: [71, 80]
    radius_range: [24, 64]
    angle_range: [0, 6.283185307]
    interpolation_mode: INTERP_CUBIC
    input: cartesian_input_01.mrc
    output: polar_output_01.mrc
  2:
    cartesian_shape: [3, 1, 64, 128]
    polar_shape: [3, 1, 256, 128]
    cartesian_center: [32, 32]
    radius_range: [0, 28]
    angle_range: [0, 3.1415]
    interpolation_mode: INTERP_LINEAR
    input: cartesian_input_02.mrc
    output: polar_output_02.mrc
